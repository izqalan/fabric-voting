basePath: /api/v1
host: localhost:8081
info:
  contact:
    email: izqalan@duck.com
    name: Izqalan Nor'Izad
    url: https://github.com/izqalan
  description: A Voting DLT service API in Go using Gin framework.
  title: Fabric Voting API
  version: "1.0"
paths:
  /ballot/vote:
    post:
      consumes:
      - application/json
      description: vote for a candidate
      produces:
      - application/json
      responses:
        "200":
          description: Vote casted
          schema:
            type: string
      summary: vote
      tags:
      - Ballot
  /candidate:
    post:
      consumes:
      - application/json
      description: Create a new candidate
      produces:
      - application/json
      responses:
        "200":
          description: Candidate created
          schema:
            type: string
      summary: Create Candidate
      tags:
      - Candidate
  /candidate/{electionID}:
    get:
      consumes:
      - application/json
      description: Get candidate by electionID
      parameters:
      - description: Election ID
        in: path
        name: electionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Candidates fetched
          schema:
            type: string
      summary: Get Candidate
      tags:
      - Candidate
  /election:
    get:
      consumes:
      - application/json
      description: Get all elections
      produces:
      - application/json
      responses:
        "200":
          description: Elections fetched
          schema:
            type: string
      summary: Get All Elections
      tags:
      - Election
    post:
      consumes:
      - application/json
      description: Create a new election
      produces:
      - application/json
      responses:
        "200":
          description: Election created
          schema:
            type: string
      summary: Create Election
      tags:
      - Election
  /election/{electionID}:
    get:
      consumes:
      - application/json
      description: Get election by electionID
      parameters:
      - description: Election ID
        in: path
        name: electionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Election created
          schema:
            type: string
      summary: Get Election by id
      tags:
      - Election
    put:
      consumes:
      - application/json
      description: Update election by electionID
      parameters:
      - description: Election ID
        in: path
        name: electionID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Election updated
          schema:
            type: string
      summary: Update Election
      tags:
      - Election
  /hello:
    get:
      description: Returns hello world
      produces:
      - application/json
      responses:
        "200":
          description: hello world
          schema:
            type: string
      summary: Hello World
      tags:
      - Signal
  /ping:
    get:
      description: Returns pong
      produces:
      - text/plain
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: Ping Pong
      tags:
      - Signal
  /voter:
    post:
      consumes:
      - application/json
      description: Create a new voter
      produces:
      - application/json
      responses:
        "200":
          description: Voter created
          schema:
            type: string
      summary: Create Voter
      tags:
      - Voter
swagger: "2.0"
